"abrir_csv_individuales","Autor: Ivan Litteri","Ayuda: se guardan los datos a leer de los archivos individuales en un diccionario ya que la unica forma que encontramos",""
"actualizar_diccionario_autores","Autor: Ivan Litteri","Ayuda: recibe los datos extraidos de una linea leida de los archivos csv y los guarda en el diccionario final.","#Agrega los datos a el diccionario"
"actualizar_diccionario_funciones","Autor: Ivan Litteri","Ayuda: recibe los datos extraidos de una linea leida de los archivos csv y los guarda en el diccionario final.","#Si la funcion no esta como key del diccionario, entonces la agrego y le doy su forma","#Agrego los datos a sus respectivos lugares","#Si la key comentarios aun no existe en la funcion lo agrego y le doy forma","#Agrego los datos a sus respectivos lugares"
"analizar_ingreso_usuario","Autor: Joel Glauber","Ayuda: solicita al autor que ingrese una de las opciones","#Se solicita ingreso al usuario","#Analiza la opcion ingresada","#Se solicita ingreso al usuario"
"analizar_linea_funcion","Autor: Ivan Litteri","Ayuda: Analiza las lineas que previamente se catalogaron como dentro de una funcion, y les da formato para el csv","#Analiza las lineas sabiendo que se encuentran dentro de un comentarios de tres comillas cuando esta bandera esta en True","#Si en la linea de comentario esta la cadena 'Ayuda' y ademas la bandera de ayuda es False","#Analiza la linea de ayuda desde que empieza ('[') hasta que termina (']') y obtendo la linea de ayuda (que se va concatenando) y la bandera de ayuda que indica si debe seguir concatenando o si ya se termino el comentarios de ayuda","#Las banderas de comentario y ayuda se 'bajan' en caso de que se detecte que se termina el comentario de triple comilla","#Esa declaracion cubre aquellos casos en los que una funcion no dispone de return para indicar que se termino","#Esta declaracion detecta que una funcion termina en el return","#Esta declaracion detecta si hay un numeral en la linea, pero lo analiza como comentario si y solo si el formato es correcto","#Si se comienza un comentario de triple comilla","#Si pasa todas las interrogacones y llega aca, significa que se trata de una linea de codigo corriente","#Esta declaracion filtra a las lineas fuera de funcion","#Esta declaracion concatena aquellas lineas de codigo no vacias"
"analizar_linea_modulo","Autor: Ivan Litteri","Ayuda: analiza la linea que le llega por parametro y la separa segun si es linea de codigo, o comentario, o ayuda de funcion o autor, y guarda esta informacion","#Analiza las lineas sabiendo que se encuentran dentro de una funcion cuando esta bandera esta en True","#formatea la linea de funcion","#Si no esta la bandera de funcion levantada y la linea leida se trata de la declaracion de una funcion","#Formatea la linea de declaracion de funcion","#Si no esta levantada la bandera de funcion y la linea no es una que declara una funcion entonces se trata de una linea que esta fuera de funcion","#Guarda la linea fuera de funcion","#Baja las banderas de comentarios y ayuda en caso de que hayan quedado levantadas"
"analizar_opcion","Autor: Joel Glauber","Ayuda: analiza la opcion que le llega por parametro, la cual fue ingresada por el usuario, y en base a esa opcion,","#Si la opcion es del tipo numeral, la analiza por seraprado","#Si la opcion es del tipo signo de pregunta, la analiza por seraprado","#Si se ingresa la opcion 'imprimir ?todo' se crea el archivo de ayuda","#Si la opcion ingresada es incorrecta, se vuelve a intentar"
"analizar_recursividad_funcion","Autor: Andrés Kübler","Ayuda: Modifica la lista de invocaciones, quitando de ella la funcion pasada por parámetro, y la devuelve","#Recorre la lista de invocaciones","#Si la funcion_invocada es distinta de la función la agrega a la lista_nueva"
"analizar_reutilizacion","Autor: Luciano Federico Aguilera","Ayuda:Esta funcion sirve como main para llamar a las demas funciones","# Defino el nombre nombre del archivo que usamos para obtener los datos que fue creado en creador csv"
"asignacion_valores_tabla","Autor: Luciano Federico Aguilera","Ayuda: Esta funcion recive filas_txt y agrega a las lineas el valor correspondiente a cada funcion tambien recibe diccionario_invocaciones ","# Esta cadena devuelve el nombre de la funcion si se ingresa su indice correspondiente","# Aqui agrego el caracteres correspondientes a cada funcion ('X', 'numero' o 'vacio')"
"autor_funcion","Autor: Ivan Litteri","Ayuda: Esta funcion analiza la linea de codigo que anteriormente fue filtrada como posible contenedora de datos del autor de la funcion.","#Declara inicialmente como una cadena vacia para luego llenarla desde 0","#Recorre caracter a caracter la linea que le entra por parametro","#Cuando se termine el comentario de autor, se deshabilita la bandera para que no se continuen guardando caracteres en la cadena.","#Cuando el caracter se trate de una apertura de corchete y al mismo tiempo esa linea tenga la palabra autor, se habilita la bandera para que se almacenen caracteres en la cadena de autor."
"ayuda_funcion","Autor: Ivan Litteri","Ayuda: Esta funcion analiza la linea de codigo que le llega por parametro (sabiendo que se trata de una linea de ayuda de funcion;","#Declara inicialmente como una cadena vacia para luego llenarla desde 0","#Recorre caracter a caracter la linea que entra por parametro","#Cuando se termine el comentario de ayuda, se deshabilita la bandera para que no se continuen guardando caracteres en la cadena.","#Cuando el caracter se trate de una apertura de corchete y al mismo tiempo esa linea tenga la palabra ayuda, se habilita la bandera para que se almacenen caracteres en la cadena de ayuda."
"borrar_csv_individuales","Autor: Ivan Litteri","Ayuda: Borra los archivos .csv individuales (que se encuentran en el repositorio actual) cuyas ubicaciones se obtienen","#Obtengo las ubicaciones y las recorro para borrar el archivo que se encuentra en ella.","#Borro el archivo que se encuentra en esa ubicacion."
"buscar_invocaciones","Autor: Luciano Federico Aguilera","Ayuda: Busca las funciones presentes en el diccionario creado anteriormente y las agrega en un diccionario con un numero de indice ","#Defino los totales para agregarlos posteriormente a la tabla","# Agrego una key para relacionar los nombres de las variables con sus indices para ahorrar codigo","# Tambien hago lo mismo para hacer lo inverso"
"cantidad_declaraciones","Autor: Santiago Vaccarelli","Ayuda: esta funcion recibe un diccionario, una lista de lineas, un nombre de funcion; en donde",""
"cantidad_invocaciones","Autor: Ivan Litteri","Ayuda: le llega por parametro una linea, y una lista con los nombres de las funciones, analiza por cada",""
"cerrar_csv_individuales","Autor: Ivan Litteri","",""
"comentario_numeral","Autor: Ivan Litteri","Ayuda: Esta funcion analiza la linea que le llega por parametro (sabiendo que se trata de una linea que posiblemente tenga un comentario","#Declara inicialmente como una cadena vacia para luego llenarla desde 0","#Recorre caracter a caracter la linea que entra por parametro","#Cuando el caracter se trate del numeral, se habilita la bandera para que se empiece a guardar caracteres en la cadena inicializada anteriormente"
"consular_funciones","Autor: Joel Glauber","",""
"contar_interacciones","Autor: Luciano Federico Aguilera","Ayuda : Busca coincidencias entre las funciones listadas en tupla_funciones y las presentes en la lista datos_por_funcion para su correspondiente funcion y agrego esa informacion en diccionario_invocaciones ","# Esta cadena devuelve el nombre de la funcion al poner su indice","# Aqui se agregan a su key correspondiente los totales de los indices mencionados anteriormente","# Cuento las veces que se invoca a las funciones","# Esta cadena devuelve el nombre de la funcion al poner su indice correspondiente","# Se cuentan todas las invocaciones por su respectivo indice"
"creacion_archivo_txt","Autor: Luciano Federico Aguilera","Ayuda:Esta funcion crea un archivo txt llamado anatizador.txt e imprime las lineas por consola a partir de los elementos de la lista filas_txt",""
"creacion_formato_tabla","Autor: Luciano Federico Aguilera","Ayuda: Esta funcion recive el diccionario y largo de la funcion con mas caracteres para armar el formato de la tabla y devuelve una lista de lineas del archivo txt final","# Creo una lista cuyos elementos seran las lineas del archivo txt","# Creo la primer y ultima linea del archivo de texto","# Agrego los nombres de las funciones junto con sus indices a todas las lineas restantes","# Concateno a los totales que estaban el el diccionario a la tabla"
"crear_ayuda_txt","Autor: Joel Glauber","Ayuda: crea y graba el archivo de ayuda",""
"crear_csv_finales","Autor: Ivan Litteri","",""
"crear_csv_individuales","Autor: Ivan Litteri","Ayuda: ","#Lista de nombres de archivos fuente_csv","#Lista de nombres de archivos comentarios_csv","#Lista de lineas fuera de funcion","#Recorre la informacion de las ubicaciones de la forma: (ubicacion, nombre_modulo)","#Abre el archivo de la ubicacion y crea los fuente y comentarios csv de ese modulo abierto","#Lee las lineas, las analiza y formatea y obtiene las lineas a grabar","#Graba los csv individuales (fuente y comentarios)","#Guarda el nombre de los archivos en listas"
"crear_panel_general_csv","Autor: Santiago Vaccarelli","Ayuda: Crea el archivo csv de panel general y le graba los datos",""
"crear_participacion_txt","Autor: Ivan Litteri","Ayuda: Crea y graba el archivo de participacion txt con los datos formateados","#Abre el archivo para escribir y lo cierra al finalizar la grabacion","#Escribe en el archivo"
"declaracion_funcion","Autor: Ivan Litteri","Ayuda: esta funcion analiza la linea que le entra por parametro, previamente filtrada como linea de declaracion de funcion, de esta forma","#Declara inicialmente cadenas vacias para luego llenarla desde 0","#Recorre caracter a caracter desde 'def' en adelante la linea que le llega por parametro","#Se guardan los caracteres en la cadena de parametros cuando esta habilitada la bandera","#Se guardan los caracteres en la cadena de nombre cuando esta habilitada la bandera y siempre y cuando no se trate de espacios","#Cuando aparece el caracter evaluado, se habilita la bandera para empezar a guardar los caracteres en la cadena de parametros y se deshabilita la bandera que permitia el almacenamiento de caracteres en la cadena de nombre","#Se deshabilita la bandera que permitia el almacenamiento de caracteres en la cadena de parametros cuando se detecta que ya no se trata mas de uno"
"encontrar_main_archivo","Autor: Andrés Kübler","Ayuda: Busca la funcion main en una lista de las claves del diccionario, y la devuelve como 2 variable","#Crea una variable con las claves del diccionario en forma de lista","#Define un contador en 0 y una condición de corte","#Recorre los elementos de la lista_de_keys","#Se fija si el elemento es el main si comienza con un *","#Guarda la funcion en dos variables (una con el * y otra sin el mismo)","#Define la condición false para salir del ciclo","#Suma una posición al contador"
"formatear_datos_numeral","Autor: Joel Glauber","Ayuda: crea una cadena de caracteres vacia para ir concatenando en la forma que se quiere que se impriman los datos",""
"formatear_datos_pregunta","Autor: Joel Glauber","Ayuda: crea una cadena de caracteres vacia para ir concatenando en la forma que se quiere que se impriman los datos",""
"formatear_declaracion_funcion","Autor: Ivan Litteri","Ayuda: Analiza las lineas que previamente se catalogaron como declaracion de funcion, y les da formato para el csv","#Se levanta la bandera de funcion","#Se bajan las banderas de comentario y ayuda en caso de que hayan quedado levantadas","#Se analiza la linea de declaracion","#Agrega un asterisco en el modulo principal, esto se usa luego para facilitar la deteccion de la funcion principal","#Guarda la primera parte de la linea a grabar en el fuente correspondiente"
"formatear_participacion","Autor: Ivan Litteri","Ayuda: Formatea los datos del diccionario como se pide en la consigna y devuelve una cadena con los datos","#Obtiene las lineas de codigo totales de la aplicacion","#Declara el contador de funciones en 0","#Inicializa la devolucion en vacio para ir concatenando","#Concatena la primera linea","#Recorre los datos ordenados que me llegan por parametro","#Declara esta variable, que aunque ya tenia los datos en otra, para que la impresion y el grabado se entiendan mejor","#Guarda las cadenas de texto de igual forma por el mismo motivo","#Concatena la linea correspondiende al autor y la fila que corresponde al titulo de la tabla del autor","#Concatena la linea de iguales","#Recorre los datos de las funciones del autor","#Establece la separacion que quiero tener entre el nombre de la funcion y la cantidad de lineas de esa funcion","#Concatena la linea: 'Funcion' ---------- 'Cantidad Lineas de Funcion'","#Guarda el porcentaje de lineas de codigo que escribio el autor respecto del total del codigo","#Incrementa el contador de funciones","#Establece la columna 1 y la separacion","#Concatena la linea que contiene la cantidad de funciones que escribio el autor y el porcentaje respecto a todo el codigo","#Establece la columna 1 y la separacion","#Concatena la linea final"
"generar_tabla_panel_general","Autor: Santiago Vaccarelli","Ayuda: toma como parametro el diccionario con los datos de todas las funciones y crea variables (columnas_datos, lista_de_listas)para usar otras funciones (longitudes_maximas,imprimir_tabla)","#crea la lista longitud y le aplico valores iniciales con la primer linea (los titulos)","#crea una lista de listas en donde el primer elemento es la lista de titulos","#crea una lista de strings con los elementos del diccionario como los pide para la tabla y el csv","#suma a la lista de listas cada una de las listas columna de datos que dependen de la key","#calcula las longitudes maximas de cada columna comparando elementos de mismo indice de diferentes listas"
"grabar_ayuda_txt","Autor: Joel Glauber","Ayuda: le llega por parametro la opcion ingresada por el usuario, el archivo para grabar, los datos a grabar,","#Si hay un signo de pregunta en la opcion entonces obtiene los datos solicitados y los graba en el archivo","#Si hay un numeral en la opcion entonces obtiene los datos solicitados y los graba en el archivo"
"grabar_csv_final_ordenado","Autor: Luciano Federico Aguilera","Ayuda: lee las lineas de los archivos individuales, las compara, y graba de forma ordenada alfabeticamente por funcion","#Obtiene la menor linea, en este caso la siguiente a imprimir","#Lista de lineas leidas de los archivos individuales","#Mientras la lista de lineas no este vacia","#Recorre linea por linea","#Graba la linea y luego la borra de la lista una vez encontrada"
"grabar_csv_individual","Autor: Ivan Litteri","",""
"grabar_panel_control_csv","Autor: Santiago Vaccarelli","Ayuda: graba las lineas que le llegan por parametro al archivo",""
"grafica_arbol_invocaciones","Autor: Andrés Kübler","Ayuda: Esta funcion es el main del punto 4; arma el arbol de funciones llamando a la función obtener_arbol_invocaciones, e imprime","#Analiza las invocaciones del diccionario y arma un diagrama de las mismas y sus invocaciones internas","#Imprime el arbol"
"guardar_comentario_multilinea","Autor: Ivan Litteri","Ayuda: le llega una linea en la que se abre un comentario multilinea, se analiza si este se cierra en la misma linea y lo guarada, sino levanta la bandera, guarda la linea y continua concatenando caracteres","#Esta declaracion cubre aquellos casos en el que el comentario empieza y termina en la misma linea","#Si 'Autor' esta en esa linea entonces analiza y guarda al autor","#Si 'Ayuda' esta en esa linea entonces analiza y guarda la ayuda","#Si no se trata del autor ni de la ayuda entonces es un comentario extra","#Si hasta el momento la cadena de otros_comentario esta vacia, se iguala al comentario hallado","#Si ya existia otro comentario en la cadena otros_comentarios entonces lo concatena","#En caso de que no se trate de un comentario de triple comilla que empieza y termina en la misma linea","#Levanta la bandera de comentario","#Analiza el autor en caso de haberlo"
"guardar_comentario_numeral","Autor: Ivan Litteri","Ayuda: le llega una linea que previamente fue catalogada como comentario, la analiza y guarda el comentario y posible linea de codigo en variables","#Se analiza la linea de comentario, y devuelve el comentario y la posible linea de codigo (en caso de que este la linea y luego de ella el comentario)","#Si hasta el momento la cadena de otros_comentario esta vacia, se iguala al comentario hallado","#Si ya existia otro comentario en la cadena otros_comentarios entonces lo concatena","#En caso de que se haya devuelto una linea en el analisis de la linea que contenia un comentario se agrega a las lineas de la funcion","#Se apaga la bandera de comentario"
"imports","Autor: Ivan Litteri","Ayuda: esta funcion analiza la linea que le llega por parametro que anteriormente fue filtrada como","#Si la linea es del estilo import modulo...","#Si la linea es del estilo from modulo import..."
"informacion_ubicaciones","Autor: Ivan Litteri","Ayuda: Lee el archivo principal que le llega por parametro (en nuestro caso el .txt), y retorna una lista con las",""
"largo_linea","Autor: Joel Glauber","Ayuda: analiza un comentario de ayuda con mas de 80 caracteres, y devuelve el mismo, pero cada 80 caracteres, agrega","#Declara una cadena vacia para llenar con los caracteres de el comentario de ayuda","#Declaro una variable global como 0 para usarla de indice","#Si se llega a una posicion que es multiplo de 79 (cada vez que se llega a 80 caracteres de longitud) y agrega un enter","#Agregar el caracter a la cadena final","#Incrementa el indice"
"leer_archivos_csv","Autor: Ivan Litteri","Ayuda: recibe los archivos fuente unico y comentarios csv, los lee secuencialemente, extrayendo de cada linea los","#Inicializo el diccionario en vacio","#Declaro el diccionario vacio para llenar luego","#Cargo la primera linea del archivo fuente","#Cargo la primera linea del archivo de comentarios","#Mientras el archivo tenga lineas para leer","#Desempaqueto los datos de cada linea","#Desempaqueto los datos de cada linea","#Actualiza los diccionarios con los datos extraidos de las lineas","#Avanzo de linea en el archivo","#Avanzo de linea en el archivo"
"leer_csv_individuales","Autor: Luciano Federico Aguilera","Ayuda: lee secuencialmente los datos de los archivos individuales que le llegan y los guarda en una lista","#Declara una lista vacia a llenar","#Recorro los modulos en el diccionario de datos","#Carga la linea del archivo abierto","#Mientras el archivo tenga lineas","#Guarda la linea en una lista","#Avanza de linea en el archivo"
"leer_modulo","Autor: Ivan Litteri","Ayuda: lee las lineas del modulo que le es pasado por parametro, y formatea sus datos (luego de ser analizados) para la grabacion de su csv correspondiente","#Lista de listas de lineas a grabar","#Lista de banderas de funcion, comentario y ayuda","#Lista de cadenas a formatear","#lista de cadenas a guardar informacion","#Carga la primera linea del archivo y reemplaza las comillas dobles por simples","#Analiza las lineas mientras existan en el archivo","#Analiza las lineas y obtiene los datos formateados","#Carga la siguiente linea del archivo y reemplaza las comillas dobles por simples","#Esta declaracion cubre los casos en el que la ultima de funcion del modulo leido no tiene return, entonces guarda esa ultima linea que no se guardo en el analisis","#Agrega un enter en aquellas lineas que no lo tienen","#Devuelve las lineas a grabar y la lista de lineas de fuera de funcion"
"lineas_codigo_totales","Autor: Ivan Litteri","Ayuda: le llega por parametro el diccionario ordenado por cantidad de lineas totales por autor (si se pasase otro",""
"lista_funciones","Autor: Ivan Litteri","Ayuda: le llegan un objeto de text.IO (datos del archivo fuente_unico) y devuelve una lista con los nombres de todas","#Obtiene la primera linea del archivo","#Agrega a la lista de funciones la funcion correspondiente al primer campo de la linea","#Avanza de linea en el archivo"
"longitud_maxima","Autor: Santiago Vaccarelli","Ayuda: busca las longitudes mas largas para cada columna del la tabla","#itera los elementos de una lista","#compara para cada indice de la lista si la longitud es mayor"
"main","Autor: Andrés Kübler","","#Crea los archivos csv fuente_unico y comentarios","#for funcion in datos_por_funciones:","#    print(f'{funcion}.{datos_por_funciones[funcion]['modulo']} - {datos_por_funciones[funcion]['invocaciones']}')","#Abre el menu de interaccion"
"maxima_longitud","Autor: Ivan Litteri","",""
"menu_interaccion","Autor: Andrés Kübler","Ayuda: se queda a la espera del ingreso por consola del usuario, y en base a lo que se ingresa actua.","#Muestra el menu de interaccion en consola","#Solicita al usuario el ingreso de una opcion mostrada en el menu","#Imprime un enter","#Mientras la opccion ingresada no sea un espacio o enter...","#Si la opcion ingresada es 1 o 'panel general de funciones' ejecuta el main del modulo y una vez que termina eso muestra denuevo el menu","#Si la opcion ingresada es 2 o 'consultar funciones' ejecuta el main del modulo y una vez que termina eso muestra denuevo el menu","#Si la opcion ingresada es 3 o 'analizar reutilizacion de codigo' ejecuta el main del modulo y una vez que termina eso muestra denuevo el menu","#Si la opcion ingresada es 4 o 'arbol de invocaciones' ejecuta el main del modulo y una vez que termina eso muestra denuevo el menu","#Si la opcion ingresada es 5 o 'informacion de desarrollador' ejecuta el main del modulo y una vez que termina eso muestra denuevo el menu","#Si la opcion ingresada es 6 o 'ayuda' muestra en consola la ayuda para el uso del menu","#Si no se ingresa ninguna de las opciones anteriores vuelve a preguntar","#Solicita al usuario el ingreso de una opcion mostrada en el menu"
"merge","Autor: Luciano Federico Aguilera","Ayuda: abre los 'n' archivos individuales y el archivo final en forma paralela, los lee secuencialmente, graba en","#Abre los archivos 'n' individuales y el archivo final","#Graba en forma ordenada las lineas de los individuales en el archivo final","#Cierra todos los archivos abiertos"
"mostrar_ayuda_menu","Autor: Ivan Litteri","Ayuda: Muestra en pantalla una breve descripcion de lo que trata cada opcion del menu",""
"mostrar_datos_funcion","Autor: Joel Glauber","Ayuda: analiza la opcion ingresada y dependiendo de esta, imprime la informacion solicitada.","#Si hay un numeral en la opcion entonces obtiene los datos solicitados y los imprime en pantalla","#Si hay un signo de pregunta en la opcion entonces obtiene los datos solicitados y los imprime en pantalla"
"mostrar_instrucciones_uso","Autor: Ivan Litteri","Ayuda: Imprime las instrucciones de uso del modulo",""
"mostrar_menu_interaccion","Autor: Ivan Litteri","Ayuda: muestra en pantalla las opciones a elegir del menu",""
"mostrar_panel_general","Autor: Santiago Vaccarelli","Ayuda: imprime la lista de listas con los espacion necesarios para que quede parejo","#para cada elemento de la lista se fija cuantos espacios hace falta sumarle","#imprime los elementos de la lista juntos y con los espacios correspondientes a cada elemento"
"mostrar_participacion","Autor: Ivan Litteri","",""
"mostrar_tabla_funciones","Autor: Joel Glauber","Ayuda: Imprime la tabla de funciones",""
"obtener_arbol_invocaciones","Autor: Andrés Kübler","Ayuda: Esta funcion recursiva, analiza la funcion y separacion pasadas por parametros, para ir armando un ","#Crea un string vacio donde se va a guardar todo el arbol","#Se fija si la funcion es vacia","#Busca la funcion main/principal en el diccionario","#Crea una variable string con la información de la funcion main/principal","#Si la variable función no es vacia, crea una variable string con la funcion recorrida","#Agrega el string creado al string arbol","#Crea una variable con las invocaciones de la función recorrida para ser reemplazada próximamente","#Si la funcion se llama a ella misma (es recursiva)","#Modifica las invocaciones sacando de la lista la funcion recursiva","#Agrega la funcion recursiva al string","#Revisa si la función invoca a otras","#Si invoca, se autollama pasandole como parametro: el diccionario; la primera invocación; un string vacio. Luego, lo agrega al string arbol","#Recorre las invocaciones de la función recorrida, comenzando desde la posición 1","#Para cada invocacion, pasa como parametro la función y su longitud, y autollama la función","#Se fija si existe la funcion recursiva, y de ser así la agrega al arbol","#Si la longitud de las invocaciones es nula, agrega un salto de linea"
"obtener_datos_csv","Autor: Ivan Litteri","Ayuda: le llegan por parametro los archivos csv y devuelve un diccionario ordenado con los datos leidos de los","#Abre los archivos","#Llama a una funcion que lee y devuelve los datos ordenados"
"obtener_informacion_desarrollador","Autor: Ivan Litteri","",""
"obtener_panel_general","Autor: Santiago Vaccarelli","",""
"opcion_numeral","Autor: Joel Glauber","Ayuda: analiza si se quiere saber todo o solo de una funcion en especifico.","#Si se quiere saber todo, imprime los datos para cada funcion","#Si se quiere saber de una funcion especifica entonces imprime sobre esa funcion"
"opcion_pregunta","Autor: Joel Glauber","Ayuda: analiza si se quiere saber todo o solo de una funcion en especifico.","#Si se quiere saber todo, imprime los datos para cada funcion","#Si se quiere saber de una funcion especifica entonces imprime sobre esa funcion"
"ordenar_diccionario_autores","Autor: Ivan Litteri","Ayuda: Reordena los datos del diccionario que llega del main en otro de forma descendiente respecto de la cantidad de","#Devuelve una lista ordenada por el total de lineas que escribio cada autor"
"porcentaje_lineas_codigo","Autor: Ivan Litteri","Ayuda: le llega por parametro el diccionario ordenado por cantidad de lineas totales por autor (si se pasase otro",""
"printear_arbol","Autor: Andrés Kübler","Ayuda: Imprime el arbol de forma ordenada y le quita el ultimo salto de linea",""
"resetear_por_fin","Autor: Ivan Litteri","Ayuda: guarda la linea que le llega por parametro y resetea las variables y banderas","#Se bajan las banderas de funcion, comentario, ayuda","#Se guarda la linea en la que se encuentra en el return como ultima linea de la funcion leida hasta el momento","#Se añaden las lineas a las listas de lineas a grabar","#Se reinician las variables que acumulan la informacion de las lineas de la funcion para que comiencen de cero"
"resetear_por_inicio","Autor: Ivan Litteri","Ayuda: guarda la linea que le llega por parametro y resetea las variables y banderas","#Se declaran las banderas de comentarios y ayuda por si acaso (no se baja la bandera de funcion ya que se continua en una)","#Se agrega a la lista de lineas a grabar la informacion acumulada hasta el momento","#Se reinician las variables que acumulan la informacion de las lineas de la funcion para que comiencen de cero","#Se obtiene la informacion de la linea de declaracion de funcion","#Agrega un asterisco en el modulo principal, esto se usa luego para facilitar la deteccion de la funcion principal","#Guarda la primera parte de la linea a grabar en el fuente correspondiente"
"tabla_funciones","Autor: Joel Glauber","Ayuda: A esta funcion le llega por parametro una lista con los nombres de todas las funciones","#Creo una cadena vacia, para llenar luego con los nombres de las funciones","#Recorro los indices de la lista","#Si llegue a una columna 5 entonces da un enter para pasar a la siguiente fila","#Sumo los nombres de las funciones separadas con una tabulacion"
"ubicaciones_archivos_csv_individuales","Autor: Ivan Litteri","","#Retorna una lista de ubicaciones de todos los archivos .csv individuales"
